

import math
import random
import calendar

__author__ = 'Сотников Владимир А.'
print("Данный файл содержит решения ДЗ №2 для блока Normal, автор", __author__)

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
#========================================================================================================
print("="*15 + " "*5+ "Задача 1")
a=int(input("Введите нижний предел для random.randint (а) = " ))
b=int(input("Введите верхний предел для random.randint (b) = " ))


n=int(input("Введите количество элементов в списке: "))
j=0

list_01=[]
while j<=(n-1):
	list_01.append(random.randint(a, b))
	j+=1

list_02=[]
for elem in list_01:
	if elem>0:
		if (math.sqrt(elem))%1==0:
			list_02.append(math.sqrt(elem))

print("Сгенерированная последовательность: ")
print(list_01)
print("Последовательность с корнями, если существуют и целые: ")
print(list_02)

#========================================================================================================
print("="*15 + " "*5+ "Задача 2")

#calendar.month_name[i]
listMo=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октябрь","ноября","декабря"]
chislit=["первое", "второе","третье","четвертое","пятое","шестое","седьмое", "восьмое","девятое","десятое","одиннадцатое", "двенадцатое","тринадцатое","четырнадцатое","пятнадцатое","шестнадцатое","семнадцатое","восемнадцатое","девятнадцатое","двадцатое","тридцатое","тридцать первое"]

Param_date=input("Введите дату в формате DD.MM.YYYY или DD/MM/YYYY = ")
Param_date=Param_date.strip()
date_with_word=""

if int(Param_date[0:2])<=20:
	date_with_word=chislit[int(Param_date[0:2])-1]
elif (int(Param_date[0:2])==30):
	date_with_word=chislit[20]
elif (int(Param_date[0:2])==31):
	date_with_word=chislit[21]
elif (int(Param_date[0:2])>20 and int(Param_date[0:2])<30):
	date_with_word="двадцать " +chislit[int(Param_date[1:2])-1]
else:
	print("что-то не то с датой...")


date_with_word=date_with_word + " " + listMo[int(Param_date[3:5])-1]
date_with_word=date_with_word + " " + Param_date[-4:] + " года"

print("дата словами: " + date_with_word)

#========================================================================================================
print("="*15 + " "*5+ "Задача 3")
print("по сути решена в Easy и выше, в задаче 1Normal")



#========================================================================================================
print("="*15 + " "*5+ "Задача 4")
a=int(input("Введите нижний предел для random.randint (а) = " ))
b=int(input("Введите верхний предел для random.randint (b) = " ))


n=int(input("Введите количество элементов в списке: "))
j=0

list_01=[]
while j<=(n-1):
	list_01.append(random.randint(a, b))
	j+=1

list02=[]
list02 = set(list_01)

print ("Сгенерировал последовательность: ")
print (list_01)
print ("Группировка последовательности: ")
print (list02)


# НЕ сработало по-чемуто с find

# list02 содержит уникальные значения, поэтому просто подсчитаем кол-во каждого эл-та
# при помощи ф-ции find // Но она работает только для строк, поэтому создадим такую

# list03=[]
# HugeStr= ""       
# for ell in list_01:
# 	HugeStr=HugeStr+str(ell)+';'


# for elem in list02:
# 	if HugeStr.find(str(elem))==1:
# 		list03.append(int(elem))

# print ("Big str for find: " + HugeStr)
# print ("Элементы встречающиеся по одному разу: ")
# print (list03)



print ("Вариант с count ")
list04=[]
for elem in list02:
	#print(int(elem))
	if list_01.count(int(elem))==1:
		list04.append(int(elem))

print (list04)


print(" ")
print("="*10 +" "*3+ "отработал на Normal"+" "*3+"="*10)



print ("P.S. Посмотрел задачи Hard - очень понравились, оставлю на выходные. Пропущу проверку ДЗ, вдруг там спойлер... ")
